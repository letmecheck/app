<h2 class="text-center">
  <% if !@game.black_player_id.nil? %>
    <%= @white_player.username %> vs <%= @black_player.username %>
  <% else %>
    <%= @white_player.username %> vs Someone
  <% end %>
</h2>

<div class="container table-surface">
  <div class="player-turn text-center"></div>
  <div class="board-booyah-box col-lg-6 col-lg-offset-3 col-sm-10
  col-sm-offset-1 col-xs-12" data-no-turbolink>
    <!-- pull in the board from a partial -->
    <%= render 'chess_board' %>
  </div>
</div>

<div class="container">
  <% if @game.black_player_id.nil? && @game.white_player_id != current_user.id %>
    <%= link_to "Join", game_path(@game), method: :patch, class: 'btn btn-primary' %>
  <% end %>
</div>

<br />

<!-- Execute the script that allows moving pieces on the board. -->
<script>
<% current_player_id = @game.white? ? @game.white_player_id : @game.black_player_id %>
  <% if current_user.id == current_player_id %>
    dragDrop();
  <% end %>
</script>

<!-- Enable automatic update of board when opponent moves -->
<script type="text/javascript" charset="utf-8">
  $(function() {
    <% if Rails.env.production? %>
      // Grab Pusher key from config vars auto-generated by
      // the Heroku Pusher addon.
      <% pusher_key = ENV['PUSHER_SOCKET_URL'][-20..-1] %>
      var pusher = new Pusher('<%= pusher_key %>');
    <% else %>
      // Grab Pusher key from local application.yml file.
      var pusher = new Pusher('<%= ENV['PUSHER_KEY'] %>');
    <% end %>
    var channel = pusher.subscribe('game-<%= @game.id %>');

    /*
    // Some useful debug msgs
    pusher.connection.bind('connecting', function() {
      console.log('Connecting to Pusher...');
    });
    pusher.connection.bind('connected', function() {
      console.log('Connected to Pusher!');
    });
    pusher.connection.bind('failed', function() {
      console.log('Connection to Pusher failed :(');
    });
    channel.bind('subscription_error', function(status) {
      console.log('Pusher subscription_error');
    });
    */

    channel.bind('move_made', function(data) {
      //window.location.reload(false);
      //if ( data.dest_x !== data.orig_x || data.orig_y !== data.dest_y ) {
        $.ajax({
          type: 'PATCH',
          url: data.piece_url,
          dataType: 'script',
          data: { piece: { x_coord: data.dest_x, y_coord: data.dest_y } }
        });
      // }
    });

    /*
    //Absolutely awful hack to make messages display:
    <% piece = @game.pieces.take %>
    $.ajax({
      type: 'PATCH',
      url: '<%= piece_url(piece) %>',
      dataType: 'script',
      data: { piece: { x_coord: <%= piece.x_coord %>,
                       y_coord: <%= piece.y_coord %> } }
    });
    */
  });
</script>
